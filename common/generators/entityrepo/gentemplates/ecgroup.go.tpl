// Code generated by entityrepo generator. DO NOT EDIT.
package [[ .PackageName ]]

import (
	"github.com/justclimber/fda/common/ecs/entity"
	"github.com/justclimber/fda/common/ecs/entityrepo"
)

type ECGroup[[ .MaskName ]] struct {
	Chunks []*Chunk[[ .MaskName ]]
	last   *Chunk[[ .MaskName ]]
}

func NewECGroup[[ .MaskName ]]() *ECGroup[[ .MaskName ]] {
	chunks := []*Chunk[[ .MaskName ]]{{}}
	return &ECGroup[[ .MaskName ]]{
		Chunks: chunks,
		last:   chunks[0],
	}
}

func (eg *ECGroup[[ .MaskName ]]) Add(e entity.MaskedEntity) (int, int) {
    em := e.(Entity[[ .MaskName ]])
	if eg.last.Size == chunkSize[[ .MaskName ]] {
		eg.last = &Chunk[[ .MaskName ]]{}
		eg.Chunks = append(eg.Chunks, eg.last)
	}
	eg.last.Add(em)
	return len(eg.Chunks) - 1, eg.last.Size - 1
}

func (eg *ECGroup[[ .MaskName ]]) Get(addr entityrepo.EAddress) entity.MaskedEntity {
	chunk := eg.Chunks[addr.ChunkIndex]

	return Entity[[ .MaskName ]]{
		Id: chunk.Ids[addr.Index],
        [[- range .Keys]]
        [[ .StrWithoutPrefix ]]: chunk.[[ .StrWithoutPrefix]][addr.Index],
        [[- end]]
	}
}